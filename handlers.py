# bot/handlers/user/start.py
from aiogram import Router, F
from aiogram.types import Message, CallbackQuery
from aiogram.filters import Command
from sqlalchemy.ext.asyncio import AsyncSession
from aiogram.fsm.context import FSMContext
from keyboards.reply import get_main_menu
from state import DomainState
from utils import logger, get_redis_history


router = Router()


@router.message(F.text == "New chat")
async def new_chat(message: Message, state: FSMContext):
    redis = get_redis_history(session_id=str(message.from_user.id))
    redis.clear()

    await message.answer("–í—ã–±–µ—Ä–µ—Ç–µ –æ–±–ª–∞—Å—Ç—å –æ –∫–æ—Ç–æ—Ä–æ–π —Ö–æ—Ç–∏—Ç–µ —É–∑–Ω–∞—Ç—å")
    await state.set_state(DomainState.domain)


@router.message(Command("start"))
async def cmd_start(message: Message, state: FSMContext):

    await message.answer(
        f"üëã –ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, {message.from_user.full_name}!\n"
        "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ —ç—Ç–æ –±–æ—Ç —Å –∏—Å–∫—É—Å—Ç–≤–µ–Ω–Ω—ã–º –∏–Ω—Ç–µ–ª–µ–∫—Ç–æ–º\n"
        "–í—ã–±–µ—Ä–µ—Ç–µ –æ–±–ª–∞—Å—Ç—å –æ –∫–æ—Ç–æ—Ä–æ–π —Ö–æ—Ç–∏—Ç–µ —É–∑–Ω–∞—Ç—å",
        # "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
        reply_markup=get_main_menu(),
    )
    await state.set_state(DomainState.domain)


@router.message(DomainState.query)
async def process_name(message: Message, state: FSMContext):
    from chat import final_chain

    session_id = str(message.from_user.id)
    data = await state.get_data()
    try:
        answer = final_chain.invoke(
            {"domain": data["domain"], "question": message.text},
            config={"configurable": {"session_id": session_id}},
        )

        await message.answer(answer)
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –æ—Ç–≤–µ—Ç–∞: {e}")
        await message.answer("‚ö†Ô∏è –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")


@router.message(DomainState.domain)
async def start_domain(message: Message, state: FSMContext):
    await state.update_data(domain=message.text)
    await message.answer("üë§ –í–≤–µ–¥–∏—Ç–µ –≤–∞—à –∑–∞–ø—Ä–æ—Å:", reply_markup=get_main_menu())
    await state.set_state(DomainState.query)




@router.message()
async def err_handler(message:Message, state: FSMContext):
    await message.answer(
        f"üëã –ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, {message.from_user.full_name}!\n"
        "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ —ç—Ç–æ –±–æ—Ç —Å –∏—Å–∫—É—Å—Ç–≤–µ–Ω–Ω—ã–º –∏–Ω—Ç–µ–ª–µ–∫—Ç–æ–º\n"
        "–í—ã–±–µ—Ä–µ—Ç–µ –æ–±–ª–∞—Å—Ç—å –æ –∫–æ—Ç–æ—Ä–æ–π —Ö–æ—Ç–∏—Ç–µ —É–∑–Ω–∞—Ç—å",
        # "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
        reply_markup=get_main_menu(),
    )
    await state.set_state(DomainState.domain)